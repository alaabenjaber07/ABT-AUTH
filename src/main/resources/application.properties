spring.application.name=ABT-AUTH

spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

spring.datasource.username=system

spring.datasource.password=admin

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver


# Show or not log for each sql query

spring.jpa.show-sql=true

# --- Oracle XE configuration ---



# Hibernate ddl auto (create, create-drop, update)

spring.jpa.hibernate.ddl-auto=update

# The SQL dialect makes Hibernate generate better SQL for the chosen database

#spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Naming strategy

server.port=8081

# --- Keycloak issuer (token source) ---
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/carthago-realm

# Pour récupérer la clé publique et valider la signature JWT (recommandé)
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/carthago-realm/protocol/openid-connect/certs


# keycloak config oauth2
#spring.security.oauth2.client.registration.keycloak.client-id=carthago-client
#spring.security.oauth2.client.registration.keycloak.client-secret=WWrnbZwsVZPk3o7I0s3m6gBcUqSEgbVN
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
#spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

keycloak.realm=carthago-realm
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.resource=carthago-client
keycloak.credentials.secret=WWrnbZwsVZPk3o7I0s3m6gBcUqSEgbVN
keycloak.bearer-only=true
keycloak.ssl-required=none

# Sécurité appliquée sur toutes les routes
keycloak.security-constraints[0].authRoles[0]=admin
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*

